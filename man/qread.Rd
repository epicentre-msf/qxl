% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qread.R
\name{qread}
\alias{qread}
\title{Read xls and xlsx worksheet}
\usage{
qread(
  path,
  sheet = NULL,
  range = NULL,
  col_names = TRUE,
  col_types = NULL,
  simplify_dates = TRUE,
  empty_cols_to_chr = TRUE,
  na = "",
  trim_ws = TRUE,
  skip = 0,
  n_max = Inf,
  guess_max = min(10000, n_max),
  progress = FALSE,
  .name_repair = "unique"
)
}
\arguments{
\item{path}{Path to the xls/xlsx file.}

\item{sheet}{Sheet to read. Either a string (the name of a sheet), or an
integer (the position of the sheet). Ignored if the sheet is specified via
\code{range}. If neither argument specifies the sheet, defaults to the first
sheet.}

\item{range}{A cell range to read from, as described in \link[readxl]{cell-specification}.
Includes typical Excel ranges like "B3:D87", possibly including the sheet
name like "Budget!B2:G14", and more. Interpreted strictly, even if the
range forces the inclusion of leading or trailing empty rows or columns.
Takes precedence over \code{skip}, \code{n_max} and \code{sheet}.}

\item{col_names}{\code{TRUE} to use the first row as column names, \code{FALSE} to get
default names, or a character vector giving a name for each column. If user
provides \code{col_types} as a vector, \code{col_names} can have one entry per
column, i.e. have the same length as \code{col_types}, or one entry per
unskipped column.}

\item{col_types}{Either \code{NULL} to guess all from the spreadsheet or a
character vector containing one entry per column from these options:
"skip", "guess", "logical", "numeric", "date", "text" or "list". If exactly
one \code{col_type} is specified, it will be recycled. The content of a cell in
a skipped column is never read and that column will not appear in the data
frame output. A list cell loads a column as a list of length 1 vectors,
which are typed using the type guessing logic from \code{col_types = NULL}, but
on a cell-by-cell basis.}

\item{simplify_dates}{Logical indicating whether to convert date columns
lacking a time component to class "Date". By default \link[readxl:read_excel]{readxl::read_excel}
reads columns containing dates or datetimes as class POSIX, even if there
is no time component (i.e. in which case the times will all be "00:00:00").
If \code{simplify_posix} is TRUE (the default), columns containing dates with no
nonzero time values are converted to class "Date" using
\link[lubridate:as_date]{lubridate::as_date}.}

\item{empty_cols_to_chr}{Logical indicating whether columns of class
"logical" containing all missing values should be converted to class
"character". If argument \code{col_types} is NULL (the default), columns
containing all missing values are read in by readxl::read_excel as class
"logical". If empty_cols_to_chr is TRUE (the default), such columns are
converted to class "character".}

\item{na}{Character vector of strings to interpret as missing values. By
default, readxl treats blank cells as missing data.}

\item{trim_ws}{Should leading and trailing whitespace be trimmed?}

\item{skip}{Minimum number of rows to skip before reading anything, be it
column names or data. Leading empty rows are automatically skipped, so this
is a lower bound. Ignored if \code{range} is given.}

\item{n_max}{Maximum number of data rows to read. Trailing empty rows are
automatically skipped, so this is an upper bound on the number of rows in
the returned tibble. Ignored if \code{range} is given.}

\item{guess_max}{Maximum number of data rows to use for guessing column
types.}

\item{progress}{Display a progress spinner? By default, the spinner appears
only in an interactive session, outside the context of knitting a document,
and when the call is likely to run for several seconds or more. See
\code{\link[readxl:readxl_progress]{readxl_progress()}} for more details.}

\item{.name_repair}{Handling of column names. Passed along to
\code{\link[tibble:as_tibble]{tibble::as_tibble()}}. readxl's default is `.name_repair = "unique", which
ensures column names are not empty and are unique.}
}
\description{
Wrapper to \code{\link[readxl:read_excel]{readxl::read_excel}} with minor changes to default settings:
\itemize{
\item columns of dates with no time component have class "Date" rather than "POSIX"
\item empty columns are read in as class "character" rather than "logical"
\item the max number of rows used to guess column types is 10k rather than 1k
}
}
