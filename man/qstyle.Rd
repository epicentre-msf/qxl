% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/styles.R
\name{qstyle}
\alias{qstyle}
\title{Conditional cell styles}
\usage{
qstyle(
  rows,
  cols = everything(),
  fontName = NULL,
  fontSize = NULL,
  fontColour = NULL,
  border = NULL,
  borderColour = getOption("openxlsx.borderColour", "black"),
  borderStyle = getOption("openxlsx.borderStyle", "thin"),
  bgFill = NULL,
  fgFill = NULL,
  halign = NULL,
  valign = NULL,
  textDecoration = NULL,
  wrapText = FALSE,
  textRotation = NULL,
  indent = NULL,
  locked = NULL,
  hidden = NULL
)
}
\arguments{
\item{rows}{Which rows the style should apply to. Can be set using
either:\cr\cr
\strong{Integer rows indexes}: (e.g. \code{rows = c(2, 5, 6)})\cr
Note that here indexes represent Excel rows rather than R rows (i.e. the
header is row 1).\cr\cr
\strong{An expression}: (e.g. \code{rows = cyl > 4})\cr
If given an expression the style is applied using conditional formatting,
with the expression translated into an Excel-style formula. Note that
conditional formatting can update in real time if relevant data is changed
within the workbook.}

\item{cols}{Tidy-selection specifying the columns that the style should apply
to. Defaults to \code{\link[dplyr:reexports]{dplyr::everything}} to select all columns.}

\item{fontName}{A name of a font. Note the font name is not validated. If fontName is NULL,
the workbook base font is used. (Defaults to Calibri)}

\item{fontSize}{Font size. A numeric greater than 0.
If fontSize is NULL, the workbook base font size is used. (Defaults to 11)}

\item{fontColour}{Colour of text in cell.  A valid hex colour beginning with "#"
or one of colours(). If fontColour is NULL, the workbook base font colours is used.
(Defaults to black)}

\item{border}{Cell border. A vector of "top", "bottom", "left", "right" or a single string).
\itemize{
   \item{\bold{"top"}}{ Top border}
   \item{\bold{bottom}}{ Bottom border}
   \item{\bold{left}}{ Left border}
   \item{\bold{right}}{ Right border}
   \item{\bold{TopBottom} or \bold{c("top", "bottom")}}{ Top and bottom border}
   \item{\bold{LeftRight} or \bold{c("left", "right")}}{ Left and right border}
   \item{\bold{TopLeftRight} or \bold{c("top", "left", "right")}}{ Top, Left and right border}
   \item{\bold{TopBottomLeftRight} or \bold{c("top", "bottom", "left", "right")}}{ All borders}
  }}

\item{borderColour}{Colour of cell border vector the same length as the number of sides specified in "border"
A valid colour (belonging to colours()) or a valid hex colour beginning with "#"}

\item{borderStyle}{Border line style vector the same length as the number of sides specified in "border"
\itemize{
   \item{\bold{none}}{ No Border}
   \item{\bold{thin}}{ thin border}
   \item{\bold{medium}}{ medium border}
   \item{\bold{dashed}}{ dashed border}
   \item{\bold{dotted}}{ dotted border}
   \item{\bold{thick}}{ thick border}
   \item{\bold{double}}{ double line border}
   \item{\bold{hair}}{ Hairline border}
   \item{\bold{mediumDashed}}{ medium weight dashed border}
   \item{\bold{dashDot}}{ dash-dot border}
   \item{\bold{mediumDashDot}}{ medium weight dash-dot border}
   \item{\bold{dashDotDot}}{ dash-dot-dot border}
   \item{\bold{mediumDashDotDot}}{ medium weight dash-dot-dot border}
   \item{\bold{slantDashDot}}{ slanted dash-dot border}
  }}

\item{bgFill}{Cell background fill colour.
A valid colour (belonging to colours()) or a valid hex colour beginning with "#".
--  \bold{Use for conditional formatting styles only.}}

\item{fgFill}{Cell foreground fill colour.
A valid colour (belonging to colours()) or a valid hex colour beginning with "#"}

\item{halign}{Horizontal alignment of cell contents
\itemize{
   \item{\bold{left}}{ Left horizontal align cell contents}
   \item{\bold{right}}{ Right horizontal align cell contents}
   \item{\bold{center}}{ Center horizontal align cell contents}
  }}

\item{valign}{A name
Vertical alignment of cell contents
\itemize{
   \item{\bold{top}}{ Top vertical align cell contents}
   \item{\bold{center}}{ Center vertical align cell contents}
   \item{\bold{bottom}}{ Bottom vertical align cell contents}
  }}

\item{textDecoration}{Text styling.
\itemize{
   \item{\bold{bold}}{ Bold cell contents}
   \item{\bold{strikeout}}{ Strikeout cell contents}
   \item{\bold{italic}}{ Italicise cell contents}
   \item{\bold{underline}}{ Underline cell contents}
   \item{\bold{underline2}}{ Double underline cell contents}
  }}

\item{wrapText}{Logical. If \code{TRUE} cell contents will wrap to fit in column.}

\item{textRotation}{Rotation of text in degrees. 255 for vertical text.}

\item{indent}{Horizontal indentation of cell contents.}

\item{locked}{Whether cell contents are locked (if worksheet protection is turned on)}

\item{hidden}{Whether the formula of the cell contents will be hidden (if worksheet protection is turned on)}
}
\description{
Wrappers to \code{\link[openxlsx:createStyle]{openxlsx::createStyle}} to create cell styles, with additional
arguments \code{rows} and \code{cols} to specify the rows and/or columns that the style
should apply to.
}
